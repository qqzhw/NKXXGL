<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconPack="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:ICIMS.Controls">


    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    <LinearGradientBrush x:Key="BorderMediumSolidColorBrush" EndPoint="0,0.5" StartPoint="1,0.5">
        <GradientStop Color="#FF15455B" />
        <GradientStop Color="#FF15455B" Offset="1" />
        <GradientStop Color="#FF1198D4" Offset="0.495" />
        <GradientStop Color="#FF1481B2" Offset="0.144" />
        <GradientStop Color="#FF1481B2" Offset="0.87" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PoupupBorderBackground" Color="#FFDADDE2" />
    <Style TargetType="{x:Type local:MenuNavControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuNavControl}">
                    <Border  x:Name="NumberBorder"   CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                          Margin="{TemplateBinding BorderMargion}" >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image  Source="{TemplateBinding ImageSource}"  Width="40" />

                            <TextBlock Grid.Column="1" x:Name="pText" Text="{TemplateBinding Text}"  FontFamily="SimSun"  Margin="10,1,0,0" FontSize="{TemplateBinding FontSize}"  Foreground="#333333" FontWeight="{TemplateBinding FontWeight}" VerticalAlignment="Center"/>


                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
 
                        <Trigger Property="IsMouseOver"  Value="true">
                            <Trigger.Setters>
                                <Setter Property="Foreground" TargetName="pText" Value="White"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Trigger.Setters>
                                <Setter Property="Foreground" TargetName="pText" Value="Black"/>
                            </Trigger.Setters>
                        </Trigger>
   
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>
    <Style TargetType="{x:Type local:LeftNavControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LeftNavControl}">
                    <Border  x:Name="NavBorder" Background="{TemplateBinding Background}"  
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel >
                            <Image  Width="36" Height="36" VerticalAlignment="Top" Source="{TemplateBinding ImageSource}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="2,0,0,0" Text="{TemplateBinding Text}"  Foreground="White"   VerticalAlignment="Center" ></TextBlock>
                        </StackPanel>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

     

    <Style x:Key="{x:Type local:ImageButton}" TargetType="{x:Type local:ImageButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Grid>
                        <Rectangle Name="rectRoot" StrokeThickness="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Rectangle.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=ImageNormal, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="rectRoot" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=ImagePressed, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rectRoot" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=ImageDisabled, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:ImageToggleButton}" TargetType="{x:Type local:ImageToggleButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageToggleButton}">
                    <Grid>
                        <Rectangle Name="rectRoot" StrokeThickness="0" SnapsToDevicePixels="False">
                            <Rectangle.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=NormalStyle, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="rectRoot" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=PressedStyle, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:ImageRadioButton}" TargetType="{x:Type local:ImageRadioButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageRadioButton}">
                    <Grid>
                        <Rectangle Name="rectRoot" StrokeThickness="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                            <Rectangle.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=ImageNormal, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="rectRoot" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush Stretch="Uniform" ImageSource="{Binding Path=ImageChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MenuTabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuTabControl}">
                    <Grid Background="{TemplateBinding Background}">
                        <Path x:Name="path" Data="M416.85185,182.06 L431.5,225.5 318.5,225.5 343.5,182.06 z" Fill="{TemplateBinding PressedColor}" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top"  Stretch="Fill" Stroke="#7DB0FF" Width="90" />

                        <TextBlock x:Name="txtHeader" Text="{TemplateBinding Header}" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"  Foreground="{TemplateBinding Foreground}" />
                        <TextBlock x:Name="btnX" Text="X"  Visibility="Collapsed" Foreground="White" VerticalAlignment="Top" FontSize="14" Margin="81,-4,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnX" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path" Property="Fill" Value="#64B0F8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AnimatedTabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="4,4,4,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AnimatedTabControl}">

                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Height="30" Margin="10,0,10,10"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Grid.Row="0" CornerRadius="12,12,12,12" Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" BorderBrush="#FFFFFFFF">
                            <TabPanel x:Name="HeaderPanel" HorizontalAlignment="Center" VerticalAlignment="Center" IsItemsHost="true" Grid.Column="0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                        </Border>

                        <Grid Grid.Row="1" Margin="0,1,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Viewport3D x:Name="vp3D" Visibility="Hidden" Width="Auto" Height="Auto">
                                <Viewport3D.Camera>
                                    <PerspectiveCamera x:Name="camera" Position="0,0,0.5" LookDirection="0,0,-1" FieldOfView="90" />
                                </Viewport3D.Camera>
                                <Viewport3D.Children>
                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <Model3DGroup>
                                                <DirectionalLight Color="#444" Direction="0,0,-1" />
                                                <AmbientLight Color="#BBB" />
                                            </Model3DGroup>
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>
                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <GeometryModel3D>
                                                <GeometryModel3D.Geometry>
                                                    <MeshGeometry3D  TriangleIndices="0,1,2 2,3,0" TextureCoordinates="0,1 1,1 1,0 0,0" Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 -0.5,0.5,0" />
                                                </GeometryModel3D.Geometry>
                                                <GeometryModel3D.Material>
                                                    <DiffuseMaterial>
                                                        <DiffuseMaterial.Brush>
                                                            <VisualBrush Visual="{Binding ElementName=BorderIn}" Stretch="Uniform" />
                                                        </DiffuseMaterial.Brush>
                                                    </DiffuseMaterial>
                                                </GeometryModel3D.Material>
                                                <GeometryModel3D.BackMaterial>
                                                    <DiffuseMaterial>
                                                        <DiffuseMaterial.Brush>
                                                            <VisualBrush Visual="{Binding ElementName=BorderIn}" Stretch="Uniform">
                                                                <VisualBrush.RelativeTransform>
                                                                    <ScaleTransform ScaleX="-1" CenterX="0.5" />
                                                                </VisualBrush.RelativeTransform>
                                                            </VisualBrush>
                                                        </DiffuseMaterial.Brush>
                                                    </DiffuseMaterial>
                                                </GeometryModel3D.BackMaterial>
                                                <GeometryModel3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="rotate" Axis="0,3,0" Angle="0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </GeometryModel3D.Transform>
                                            </GeometryModel3D>
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>
                                </Viewport3D.Children>
                            </Viewport3D>
                            <Border x:Name="BorderOut" VerticalAlignment="Stretch">
                                <Border x:Name="BorderIn" VerticalAlignment="Stretch" Background="#00000000" >
                                    <Grid>
                                        <!--<local:RoundedBox Margin="10" />-->
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="local:AnimatedTabControl.SelectionChanging">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vp3D"  Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        <DiscreteObjectKeyFrame KeyTime="0:0:1.1" Value="{x:Static Visibility.Hidden}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation To="0" Duration="0:0:0.05" Storyboard.TargetName="BorderOut" Storyboard.TargetProperty="Opacity" />
                                    <DoubleAnimation BeginTime="0:0:1.05" Duration="0:0:0.05" To="1" Storyboard.TargetName="BorderOut" Storyboard.TargetProperty="Opacity" />
                                    <Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.3"  Storyboard.TargetName="camera" 
                                            Storyboard.TargetProperty="(PerspectiveCamera.Position)" />
                                    <DoubleAnimation From="0" To="180" AccelerationRatio="0.3" DecelerationRatio="0.3" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>


            </Setter.Value>
        </Setter>
    </Style>

    
    <Style TargetType="{x:Type local:PvirtechToggleButton}">
        <Setter Setter.Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Setter.Property="Background" Value="{DynamicResource ButtonNormalBackGround}" />
        <Setter Setter.Property="Foreground" Value="{DynamicResource WindowBackGroud}" />
        <Setter Setter.Property="BorderBrush" Value="{DynamicResource BorderBrushNormal}" />
        <Setter Setter.Property="HorizontalAlignment" Value="Center" />
        <Setter Setter.Property="VerticalAlignment" Value="Center" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PvirtechToggleButton}">
                    <FrameworkTemplate.Resources>
                        <ResourceDictionary>
                            <Storyboard x:Key="Storyboard" RepeatBehavior="Forever" AutoReverse="True" TargetName="Root" BeginTime="00:00:00" Duration="00:00:01" TargetProperty="Opacity">
                                <DoubleAnimation From="1" To="0" />
                            </Storyboard>

                            <Style TargetType="{x:Type local:PvirtechCommandSelecter}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type local:PvirtechCommandSelecter}">
                                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!--<Style TargetType="{x:Type local:PhoneButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PhoneButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
                        </ResourceDictionary>
                    </FrameworkTemplate.Resources>
                    <Border Name="Root" SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" 
Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Margin}" 
VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Value="{DynamicResource FounderToggleButtonHightlightBrush}" Property="Foreground" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55" />
                        </Trigger>
                        <Trigger Property="IsAnimate" Value="True">
                            <Setter Value="{DynamicResource FounderToggleButtonHightlightBrush}" Property="Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type local:PvirtechCommandSelecter}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  local:PvirtechCommandSelecter}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True" Orientation="{Binding Orientation,Mode=TwoWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type  local:PvirtechCommandSelecter}}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style TargetType="{x:Type local:SwitchControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate   TargetType="{x:Type local:SwitchControl}">
                    <Border x:Name="switchBorder" Background="{TemplateBinding Background}" CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                       
                            <ContentControl  x:Name="cControl" TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="Auto" Background="Transparent"  FontWeight="ExtraBold"  VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" /> 
                            </Grid.RowDefinitions>
                                <Image Source="{TemplateBinding ImageSource}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="50"/>
                                <TextBlock Grid.Row="1" Margin="0,5,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" VerticalAlignment="Top" HorizontalAlignment="Center" Text="{TemplateBinding Title}" />
                            </Grid>
                        </ContentControl>
                            <!--<Border x:Name="border" Margin="0" BorderThickness="0"  Grid.Row="1" HorizontalAlignment="Stretch" Height="6" VerticalAlignment="Stretch"  />-->
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="switchBorder"  Property="Background" Value="#B0C4DE"/>
                            <Setter TargetName="switchBorder"  Property="Opacity" Value="0.8"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="switchBorder"  Property="Opacity" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter TargetName="switchBorder" Property="Background" Value="green"/>-->
                            <Setter TargetName="cControl" Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="cControl" Property="Foreground" Value="#383838"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <StackPanel x:Name="sp"  Orientation="Horizontal">
                            <Grid>
                            <Ellipse Width="32" Height="32" Fill="Gainsboro" />
                                <iconPack:PackIconFontAwesome Kind="{TemplateBinding Kind}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                            <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{TemplateBinding Title}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers> 
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="sp" Property="Background" Value="#DEDEDE"/>
                            <Setter TargetName="border" Property="Background" Value="#DEDEDE"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="border" Property="Background" Value="red"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers> 
                </ControlTemplate>
            </Setter.Value> 
        </Setter>
    </Style>
</ResourceDictionary>
