<Controls:MetroWindow x:Class="ICIMS.Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ICIMS.Client" TitleBarHeight="45" 
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:control="clr-namespace:ICIMS.Controls;assembly=ICIMS.Controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Dialog="clr-namespace:ICIMS.Metro.Controls.Dialogs;assembly=ICIMS.Metro"
        xmlns:Controls="http://metro.wenge.com/winfx/xaml/controls"
        xmlns:framework="clr-namespace:ICIMS.Core.Interactivity;assembly=ICIMS.Core"
        xmlns:Interaction="clr-namespace:ICIMS.Core.Interactivity.InteractionRequest;assembly=ICIMS.Core"
                      mc:Ignorable="d" Closing="MetroWindow_Closing"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                     
                      NonActiveGlowBrush="#CDFF0000"
                      ShowIconOnTitleBar="True"
                      ShowTitleBar="{Binding ShowMyTitleBar, Mode=TwoWay}"
                      WindowStartupLocation="CenterScreen"
        Title="Title"  Width="1024" Height="680">
    <Window.Resources> 
            <ResourceDictionary>
                <Ellipse x:Key="AppThemeMenuIcon"
                     Width="16"
                     Height="16"
                     x:Shared="False"
                     Fill="{Binding ColorBrush, Mode=OneWay}"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     StrokeThickness="1" />
                <Ellipse x:Key="AccentMenuIcon"
                     Width="16"
                     Height="16"
                     x:Shared="False"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />

                <Style x:Key="AppThemeMenuItemStyle"
                   BasedOn="{StaticResource MetroMenuItem}"
                   TargetType="{x:Type MenuItem}">
                    <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                    <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
                    <Setter Property="Icon" Value="{StaticResource AppThemeMenuIcon}" />
                </Style>

                <Style x:Key="AccentColorMenuItemStyle"
                   BasedOn="{StaticResource MetroMenuItem}"
                   TargetType="{x:Type MenuItem}">
                    <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                    <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
                    <Setter Property="Icon" Value="{StaticResource AccentMenuIcon}" />
                </Style>

                <Dialog:CustomDialog x:Key="CustomDialogTest"
                                 x:Name="CustomTestDialog"
                                 Title="This dialog allows arbitrary content.">
                    <TextBlock x:Name="MessageTextBlock"
                           Height="200"
                           Foreground="{DynamicResource AccentColorBrush}"
                           Text="{Binding Artists[0].Name}" />
                </Dialog:CustomDialog>

                <Dialog:CustomDialog x:Key="CustomCloseDialogTest"
                                 x:Name="CustomCloseDialogTest"
                                 Title="Custom Dialog which is awaitable">

                    <StackPanel>
                        <TextBlock Height="30"
                               Foreground="{DynamicResource AccentColorBrush}"
                               Text="This dialog allows arbitrary content. You have to close it yourself by clicking the close button below."
                               TextWrapping="Wrap" />
                        <Button  Content="Close Me!" />
                    </StackPanel>

                </Dialog:CustomDialog>
            <Style x:Key="CloseButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent" Width="14" Height="14">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.Visibility)"
													Storyboard.TargetName="FocusEllipse">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ColorAnimation Duration="0" To="#FFDC3030"
													Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
													Storyboard.TargetName="FocusEllipse" />
                                                <ColorAnimation Duration="0" To="White"
                                                    Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
													Storyboard.TargetName="path" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.Visibility)"
													Storyboard.TargetName="FocusEllipse">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ColorAnimation Duration="0" To="Black"
													Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
													Storyboard.TargetName="FocusEllipse" />
                                                <ColorAnimation Duration="0" To="White"
                                                    Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
													Storyboard.TargetName="path" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Ellipse x:Name="FocusEllipse" Fill="#FFF13535" Visibility="Collapsed" />
                                <Path x:Name="path" 
                                  Data="M0,0 L6,6 M6, 0 L0,6"
                                  Stroke="#FF898888"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  StrokeThickness="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AddButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent" Width="14" Height="14">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.Visibility)"
													Storyboard.TargetName="FocusEllipse">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ColorAnimation Duration="0" To="#FF1CC81F"
													Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
													Storyboard.TargetName="FocusEllipse" />
                                                <ColorAnimation Duration="0" To="White"
                                                    Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
													Storyboard.TargetName="path" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.Visibility)"
													Storyboard.TargetName="FocusEllipse">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ColorAnimation Duration="0" To="Black"
													Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
													Storyboard.TargetName="FocusEllipse" />
                                                <ColorAnimation Duration="0" To="White"
                                                    Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
													Storyboard.TargetName="path" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Ellipse x:Name="FocusEllipse" Fill="#FFF13535" Visibility="Collapsed" />
                                <Path x:Name="path"
                                  Data="M4,0 L4,8 M0, 4 L8,4"
                                  Stroke="#FF898888"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  StrokeThickness="1" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="TabItemTemplate">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="{Binding DataContext.Title}" />
                    <telerik:RadButton Command="{Binding RemoveItemCommand}"
                        Style="{StaticResource CloseButton}"
                        Margin="10,0,0,0"
                        ToolTipService.ToolTip="Remove item" />
                    <telerik:RadButton Command="{Binding AddItemCommand}"
                        ToolTipService.ToolTip="Add new item"
                        Style="{StaticResource AddButton}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="ContentTemplate">
                <Grid />
            </DataTemplate>
            <Style TargetType="telerik:RadTabItem" BasedOn="{StaticResource RadTabItemStyle}">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            </Style>
        </ResourceDictionary> 
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger  EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=window}"/>
        </i:EventTrigger>
        <Interaction:InteractionRequestTrigger   SourceObject="{x:Static framework:PopupWindows.NotificationRequest}">
            <framework:PopupWindowAction  IsModal="False"   WindowStartupLocation="CenterScreen" CenterOverAssociatedObject="True" />
        </Interaction:InteractionRequestTrigger>
        <Interaction:InteractionRequestTrigger   SourceObject="{x:Static framework:PopupWindows.ConfirmationRequest}">
            <framework:PopupWindowAction IsModal="False" WindowStartupLocation="CenterScreen"     CenterOverAssociatedObject="True" />
        </Interaction:InteractionRequestTrigger>

    </i:Interaction.Triggers>
    <Controls:MetroWindow.WindowButtonCommands>
        <Controls:WindowButtonCommands Style="{DynamicResource ICIMS.Metro.Styles.WindowButtonCommands.Win10}" />
    </Controls:MetroWindow.WindowButtonCommands>

    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Button  ToolTip="MahApps.Metro on GitHub">
                <!--<iconPacks:PackIconModern Width="22"
                                          Height="22"
                                          Kind="SocialGithubOctocat" />-->
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands ShowLastSeparator="False">
            <Button 
                    Content="Flyouts"
                    ToolTip="Flyouts demo window" />
            <Button  
                    Content="IconPacks"
                    ToolTip="All MahApp icons" />
            <Button  
                    Content="VS"
                    ToolTip="Visual Studio style demo" />
            <Button  
                    Content="Clean"
                    ToolTip="Clean window style demo" />
            <Button  
                    Content="Interop"
                    ToolTip="The interop demo" />
            <Button  
                    Content="Navigation"
                    ToolTip="Window navigation demo" />
            <ToggleButton Content="Confirm quit"
                          IsChecked="{Binding QuitConfirmationEnabled}"
                          ToolTip="Enable quit confirmation dialog on exit" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.RowDefinitions> 
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>        
        <ListBox Margin="5" BorderThickness="0" SelectedIndex="0" Background="Transparent"   SelectedItem="{Binding SelectedItem}"  SelectionMode="Single" VerticalAlignment="Stretch"   ItemsSource="{Binding SystemInfos}"   x:Name="LstBoxMore">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <prism:InvokeCommandAction Command="{Binding SelectedCommand}"    TriggerParameterPath="AddedItems" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate >
                    <Grid>
                        <control:SwitchControl   Margin="15,8,15,8"  IsSelected="{Binding IsSelected}"
											      VerticalAlignment="Stretch"   SelectedBackground="#222328"  
                                                  Content="{Binding Title}">
                        </control:SwitchControl>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <telerik:RadTabControl HorizontalAlignment="Stretch" 
			
			  telerik:StyleManager.Theme="Office2016"  VerticalContentAlignment="Stretch"  prism:RegionManager.RegionName="MainRegion" x:Name="MainTabControl" Grid.Row="0"  Grid.Column="1">

            <telerik:RadTabControl.ItemContainerStyle> 
                <Style TargetType="{x:Type telerik:RadTabItem}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Title}" FontSize="12"/>
                                    <telerik:RadButton Command="{Binding CloseCommand}"
                        Style="{StaticResource CloseButton}"
                        Margin="10,0,0,0"
                        ToolTipService.ToolTip="关闭" />
                                    <!--<telerik:RadButton Command="{Binding AddItemCommand}"
                        ToolTipService.ToolTip="Add new item"
                        Style="{StaticResource AddButton}" />-->
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </telerik:RadTabControl.ItemContainerStyle>
           
        </telerik:RadTabControl>

        <StatusBar Grid.Row="1" Grid.ColumnSpan="2">
            <StatusBarItem>MahApps.Metro DEMO Application</StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem>Selected Tab:</StatusBarItem>
            <StatusBarItem  Content="{Binding ElementName=MainTabControl, Path=SelectedItem.Header, Mode=OneWay}" />
        </StatusBar>

    </Grid>
</Controls:MetroWindow>
 